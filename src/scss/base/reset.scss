/**
* * CSS HELP
  * * Selectors:
    - Next sibling combinator (+): You can look for an element that immediately follows another element by using a + character in your selector.
      .top * + * {
        margin-top: 1.5em;
      }
    - To add space between stacked elements, use the next sibling combinator to add space only if an element is a next sibling of a child element of .top.
    .top * {
      margin-top: 1em;
    }
    - Subsequent- sibling combinator (~): A subsequent combinator is very similar to a next sibling selector. Instead of a + character however, use a ~ character. How this differs is that an element just has to follow another element with the same parent, rather than being the next element with the same parent.
    - Child combinator (>): A child combinator (also known as direct descendant) allows you more control over the recursion that comes with combinator selectors. By using the > character, you limit the combinator selector to apply only to direct children.
      .top > * + * {
        margin-top: 1.5em;
      }
    - Compound selectors: You can combine selectors to increase specificity and readability. For example, to target <a> elements, that also have a class of .my-class, write the following:
      a.my-class {
        color: red;
      }

  * * Flexbox: 
    The flex property is a shorthand for flex-grow, flex-shrink and flex-basis.
      flex: 1 0 auto; 
          ===
      flex-grow: 1;
      flex-shrink: 0;
      flex-basis: auto;

  * * Columns:
    With CSS multicolumn, you can split this into multiple columns to help with both of these issues.
      column-count: 2;
      column-gap: 1em; OR (better): column-width: Npx;
  */

*,
*::after,
*::before {
  // margin: 0;
  // padding: 0;
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p,
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

html {
  &:focus-within {
    scroll-behavior: smooth;
  }
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5; // = 150%

  // Fixed footer
  // &::after {
  //   content: '';
  //   display: block;
  //   height: ; // should be same as footer's height
  // }
}

ul[role='list'],
ol[role='list'] {
  list-style: none;
}

a:not([class]) {
  text-decoration-skip-ink: auto;
}

img {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
