/* ----- */
/* Links */
/* ----- */

a {
  color: $color-link;
  text-decoration: underline;
  text-underline-offset: 6px;

  // LVHA rule for styling links -- link, visited, hover (+ focus), active
  // &:link {
  //   color: $color-link;
  //   text-decoration: underline;
  //   text-underline-offset: 6px;
  // }

  //   &:visited {}

  &:hover,
  &:active,
  &:focus {
    color: $color-link--hover;
    // text-decoration: underline;
    // text-underline-offset: 6px;
  }

  // &:not([class]) {}
}

.menu-nav__item a {
  text-decoration: none;

  &:hover,
  &:active,
  &:focus {
    text-decoration: underline;
    text-underline-offset: 6px;
  }
}

/* ----- */
/* Buttons */
/* ----- */

.helper {
  display: none;
}

button {
  // aspect-ratio: 2 / 0.5;
  background-color: transparent;
  border: $border-default;
  box-shadow: none;
  color: $color-link;
  display: inline-block;
  padding: $gap-half $gap-double;

  &:hover,
  &:active,
  &:focus,
  &:focus-visible {
    border: $border-default--hover;
    cursor: pointer;
    color: $color-link--hover;
    // outline: $border-default--hover;
    // outline-offset: 3px;
    outline: none; // Focusable elements, like buttons, will show a focus ring when they are in focus—even when clicked. In this sort of situation, we apply 'outline: none' to the element to remove the focus ring.
  }

  &:focus-within .helper {
    display: block;
  }

  // With :focus-visible you can present a focus style when an element receives focus via the keyboard, while also using the outline: none rule to prevent it when a pointer device interacts with it.
  // &:focus-visible {}

  // Triggered when an element is actively being interacted with —- such as a click—before click is released.
  &:active {
    transform: scale(0.9);
  }

  &:disabled {
    cursor: not-allowed;
  }
}

// You can attach styles to that element when the url contains #content.
// #content:target {}
