/*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[7].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[7].use[3]!./src/scss/styles.scss ***!
  \*********************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;700;800&display=swap);
/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[7].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[7].use[3]!./src/scss/styles.scss (1) ***!
  \*************************************************************************************************************************************************************************************************************************************************/
@charset "UTF-8";
/*
  * Shadows (https://web.dev/learn/css/shadows/)
  */
/*
  * Transitions / transformations (https://web.dev/learn/css/transitions/)
  */
.circle {
  -webkit-clip-path: circle(50%);
          clip-path: circle(50%); }

.polygon {
  -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%);
          clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%); }

.rotate {
  -webkit-transform: rotateX(10deg) rotateY(10deg) rotateZ(10deg);
          transform: rotateX(10deg) rotateY(10deg) rotateZ(10deg); }

.rotate3d {
  -webkit-transform: rotate3d(1, 1, 1, 10deg);
          transform: rotate3d(1, 1, 1, 10deg); }

.scale {
  -webkit-transform: scaleX(1.2) scaleY(1.2);
          transform: scaleX(1.2) scaleY(1.2); }

.translate {
  -webkit-transform: translateX(40px) translateY(25px);
          transform: translateX(40px) translateY(25px); }

.skew {
  -webkit-transform: skew(10deg);
          transform: skew(10deg); }

/*
  * Gradients (https://web.dev/learn/css/gradients/)
  */
.linear-gradient {
  background: linear-gradient(-45deg, blue -30%, transparent 80%), linear-gradient(45deg, darkred 20%, crimson, darkorange 60%, gold, bisque); }

.radial-gradient {
  background: radial-gradient(darkred 20%, crimson, darkorange 60%, gold, bisque); }

.radial-gradient-2 {
  background: radial-gradient(closest-side, darkorange 60%, gold, bisque, darkred 20%, crimson); }

.conic-gradient {
  background: conic-gradient(white, black); }

.conic-gradient-2 {
  background: conic-gradient(gold 20deg, lightcoral 20deg, lightcoral 190deg, mediumturquoise 190deg, mediumturquoise 220deg, plum 220deg, plum 320deg, steelblue 320deg);
  background: conic-gradient(gold 20deg, lightcoral 20deg 190deg, mediumturquoise 190deg 220deg, plum 220deg 320deg, steelblue 320deg);
  border-radius: 50%;
  border: 10px solid; }

/*
  * Filters (https://web.dev/learn/css/filters/)
  */
.blur {
  -webkit-filter: blur(0.2em);
          filter: blur(0.2em); }

.brightness {
  -webkit-filter: brightness(80%);
          filter: brightness(80%); }

.contrast {
  -webkit-filter: contrast(160%);
          filter: contrast(160%); }

.grayscale {
  -webkit-filter: grayscale(80%);
          filter: grayscale(80%); }

.invert {
  -webkit-filter: invert(1);
          filter: invert(1); }

.opacity {
  -webkit-filter: opacity(0.3);
          filter: opacity(0.3); }

.saturate {
  -webkit-filter: saturate(155%);
          filter: saturate(155%); }

.sepia {
  -webkit-filter: sepia(70%);
          filter: sepia(70%); }

.hue-rotate {
  -webkit-filter: hue-rotate(120deg);
          filter: hue-rotate(120deg); }

.backdrop-filter {
  -webkit-backdrop-filter: blur(10px);
          backdrop-filter: blur(10px); }

/*
  * Text (https://web.dev/learn/css/typography/)
  */
.vertical-text {
  -webkit-writing-mode: vertical-lr;
      -ms-writing-mode: tb-lr;
          writing-mode: vertical-lr; }

.text-orientation {
  text-orientation: upright; }

.text-shadow {
  text-shadow: 1px 1px 2px rgba(255,0,17,0.8), 1px -1px 2px rgba(255,0,204,0.8), -1px 1px 2px rgba(255,0,255,0.8), -1px -1px 2px rgba(255,0,255,0.8), 0 0 16px rgba(255,0,255,0.66667), 0 0 64px rgba(255,0,255,0.86667); }

.text-light {
  font-weight: 100; }

.text-bold {
  font-weight: 900; }

.text-normal {
  font-weight: 400; }

/*
  * Blend Modes (https://web.dev/learn/css/blend-modes/)
    You can use most of the blend modes available in a design tool with CSS, using the mix-blend-mode or the background-blend-mode properties. The mix-blend-mode applies blending to a whole element and the background-blend-mode applies blending to the background of an element.
  */
.duotone {
  max-width: 450px;
  position: relative;
  margin: 0 auto; }
  .duotone::before, .duotone::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1; }
  .duotone::after {
    background: hotpink;
    mix-blend-mode: multiply; }
  .duotone::before {
    background: navy;
    mix-blend-mode: lighten; }

/*
  * Other effects
  */
.background-effect {
  aspect-ratio: 1/1;
  border: 0.5px solid rgba(153, 153, 153, 0.5);
  padding: 1rem;
  font-family: 'Google Sans', 'Google Sans Text', Roboto, sans-serif;
  font-size: 10rem;
  font-weight: bold;
  text-align: center;
  background-image: url("https://images.unsplash.com/photo-1567095761054-7a02e69e5c43?auto=format&fit=crop&w=690&q=80");
  background-size: contain;
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent; }

/*
  * Spacing
*/
/**
  * * (https://web.dev/learn/css/animations/)
  * * All animation properties:
    * * animation-name
    * * animation-duration
    * * animation-timing-function
    * * animation-delay
    * * animation-iteration-count
    * * animation-direction
    * * animation-fill-mode
    * * animation-play-state
  * * Shorthand: animation: my-animation 10s ease-in-out 1s infinite forwards forwards running;
  */
@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }
@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@-webkit-keyframes pulse {
  0% {
    opacity: 0; }
  50% {
    -webkit-transform: scale(1.4);
            transform: scale(1.4);
    opacity: 0.4; } }

@keyframes pulse {
  0% {
    opacity: 0; }
  50% {
    -webkit-transform: scale(1.4);
            transform: scale(1.4);
    opacity: 0.4; } }

.pulser {
  width: 30px;
  height: 30px;
  background: #639;
  border-radius: 50%;
  position: relative; }
  .pulser:after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: blueviolet;
    border-radius: 50%;
    z-index: -1;
    -webkit-animation: pulse 1000ms cubic-bezier(0.9, 0.7, 0.5, 0.9) infinite;
            animation: pulse 1000ms cubic-bezier(0.9, 0.7, 0.5, 0.9) infinite; }

@-webkit-keyframes grow {
  0% {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  50% {
    -webkit-transform: scaleX(1.8);
            transform: scaleX(1.8);
    background: darkturquoise; } }

@keyframes grow {
  0% {
    -webkit-transform: scaleX(1);
            transform: scaleX(1); }
  50% {
    -webkit-transform: scaleX(1.8);
            transform: scaleX(1.8);
    background: darkturquoise; } }

.grower {
  width: 200px;
  height: 80px;
  background: lightseagreen;
  position: relative;
  margin-left: auto;
  margin-right: auto;
  -webkit-animation-name: grow;
          animation-name: grow;
  -webkit-animation-duration: 2s;
          animation-duration: 2s;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear; }

@-webkit-keyframes move {
  from {
    -webkit-transform: translateX(0px);
            transform: translateX(0px); }
  to {
    -webkit-transform: translateX(300px);
            transform: translateX(300px); } }

@keyframes move {
  from {
    -webkit-transform: translateX(0px);
            transform: translateX(0px); }
  to {
    -webkit-transform: translateX(300px);
            transform: translateX(300px); } }

.mover {
  width: 50px;
  height: 50px;
  background: royalblue;
  -webkit-animation: move;
          animation: move;
  -webkit-animation-duration: 2s;
          animation-duration: 2s;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-timing-function: steps(10, end);
          animation-timing-function: steps(10, end);
  -webkit-animation-delay: 0s;
          animation-delay: 0s;
  -webkit-animation-direction: normal;
          animation-direction: normal;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }
  .mover:hover {
    -webkit-animation-play-state: paused;
            animation-play-state: paused; }

@font-face {
  font-family: 'Helsinki';
  src: url(../7ed60b1cffc2fef66927.woff) format("woff");
  font-weight: normal; }

@font-face {
  font-family: 'Inter--Regular';
  src: url(../9cd7588f47651215d52f.ttf) format("truetype");
  font-weight: normal;
  font-style: normal; }

html {
  font-size: 1rem; }

body {
  font-family: 'Inter--Regular';
  -webkit-text-decoration-color: gold;
          text-decoration-color: gold;
  -webkit-text-decoration-style: dashed;
          text-decoration-style: dashed;
  text-decoration-thickness: 0.2em;
  word-break: normal; }

span {
  font-style: inherit; }

p {
  color: aliceblue;
  max-width: 45ch;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  word-spacing: normal; }
  p:nth-child(even) {
    color: gold; }

h1 {
  font-family: 'Nunito', sans-serif;
  font-size: 3rem;
  font-weight: 100;
  letter-spacing: 0.5em;
  color: gold;
  text-shadow: 1px 1px 2px rgba(255,0,17,0.8), 1px -1px 2px rgba(255,0,204,0.8), -1px 1px 2px rgba(255,0,255,0.8), -1px -1px 2px rgba(255,0,255,0.8), 0 0 16px rgba(255,0,255,0.66667), 0 0 64px rgba(255,0,255,0.86667);
  text-transform: lowercase;
  text-decoration: underline;
  text-underline-offset: 1rem;
  -webkit-text-decoration-color: darkslateblue;
          text-decoration-color: darkslateblue;
  padding-bottom: 1.5rem; }

h2 {
  font-size: 2rem;
  font-weight: 900; }

h3 {
  font-size: 1.5rem;
  font-weight: 700; }

label {
  font-weight: bold; }

/* normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b, strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code, kbd, samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button, input, optgroup, select, textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button, input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button, select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button, [type='button'], [type='reset'], [type='submit'] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner, [type='button']::-moz-focus-inner, [type='reset']::-moz-focus-inner, [type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring, [type='button']:-moz-focusring, [type='reset']:-moz-focusring, [type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type='checkbox'], [type='radio'] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button, [type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/**
* * CSS HELP
  * * Selectors:
    - Next sibling combinator (+): You can look for an element that immediately follows another element by using a + character in your selector.
      .top * + * {
        margin-top: 1.5em;
      }
    - To add space between stacked elements, use the next sibling combinator to add space only if an element is a next sibling of a child element of .top.
    .top * {
      margin-top: 1em;
    }
    - Subsequent- sibling combinator (~): A subsequent combinator is very similar to a next sibling selector. Instead of a + character however, use a ~ character. How this differs is that an element just has to follow another element with the same parent, rather than being the next element with the same parent.
    - Child combinator (>): A child combinator (also known as direct descendant) allows you more control over the recursion that comes with combinator selectors. By using the > character, you limit the combinator selector to apply only to direct children.
      .top > * + * {
        margin-top: 1.5em;
      }
    - Compound selectors: You can combine selectors to increase specificity and readability. For example, to target <a> elements, that also have a class of .my-class, write the following:
      a.my-class {
        color: red;
      }

  * * Flexbox: 
    The flex property is a shorthand for flex-grow, flex-shrink and flex-basis.
      flex: 1 0 auto; 
          ===
      flex-grow: 1;
      flex-shrink: 0;
      flex-basis: auto;

  * * Columns:
    With CSS multicolumn, you can split this into multiple columns to help with both of these issues.
      column-count: 2;
      column-gap: 1em; OR (better): column-width: Npx;
  */
*, *::after, *::before {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

body, h1, h2, h3, h4, p, li, figure, figcaption, blockquote, dl, dd {
  margin: 0; }

html[focus-within] {
  scroll-behavior: smooth; }

html:focus-within {
  scroll-behavior: smooth; }

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5; }

ul[role='list'], ol[role='list'] {
  list-style: none; }

a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto; }

img {
  max-width: 100%;
  display: block; }

input, button, textarea, select {
  font: inherit; }

body {
  background-color: #172121;
  color: aliceblue;
  font-weight: 400; }

.flex-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

/*
  * Shadows (https://web.dev/learn/css/shadows/)
  */
/*
  * Transitions / transformations (https://web.dev/learn/css/transitions/)
  */
.circle {
  -webkit-clip-path: circle(50%);
          clip-path: circle(50%); }

.polygon {
  -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%);
          clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%); }

.rotate {
  -webkit-transform: rotateX(10deg) rotateY(10deg) rotateZ(10deg);
          transform: rotateX(10deg) rotateY(10deg) rotateZ(10deg); }

.rotate3d {
  -webkit-transform: rotate3d(1, 1, 1, 10deg);
          transform: rotate3d(1, 1, 1, 10deg); }

.scale {
  -webkit-transform: scaleX(1.2) scaleY(1.2);
          transform: scaleX(1.2) scaleY(1.2); }

.translate {
  -webkit-transform: translateX(40px) translateY(25px);
          transform: translateX(40px) translateY(25px); }

.skew {
  -webkit-transform: skew(10deg);
          transform: skew(10deg); }

/*
  * Gradients (https://web.dev/learn/css/gradients/)
  */
.linear-gradient {
  background: linear-gradient(-45deg, blue -30%, transparent 80%), linear-gradient(45deg, darkred 20%, crimson, darkorange 60%, gold, bisque); }

.radial-gradient {
  background: radial-gradient(darkred 20%, crimson, darkorange 60%, gold, bisque); }

.radial-gradient-2 {
  background: radial-gradient(closest-side, darkorange 60%, gold, bisque, darkred 20%, crimson); }

.conic-gradient {
  background: conic-gradient(white, black); }

.conic-gradient-2 {
  background: conic-gradient(gold 20deg, lightcoral 20deg, lightcoral 190deg, mediumturquoise 190deg, mediumturquoise 220deg, plum 220deg, plum 320deg, steelblue 320deg);
  background: conic-gradient(gold 20deg, lightcoral 20deg 190deg, mediumturquoise 190deg 220deg, plum 220deg 320deg, steelblue 320deg);
  border-radius: 50%;
  border: 10px solid; }

/*
  * Filters (https://web.dev/learn/css/filters/)
  */
.blur {
  -webkit-filter: blur(0.2em);
          filter: blur(0.2em); }

.brightness {
  -webkit-filter: brightness(80%);
          filter: brightness(80%); }

.contrast {
  -webkit-filter: contrast(160%);
          filter: contrast(160%); }

.grayscale {
  -webkit-filter: grayscale(80%);
          filter: grayscale(80%); }

.invert {
  -webkit-filter: invert(1);
          filter: invert(1); }

.opacity {
  -webkit-filter: opacity(0.3);
          filter: opacity(0.3); }

.saturate {
  -webkit-filter: saturate(155%);
          filter: saturate(155%); }

.sepia {
  -webkit-filter: sepia(70%);
          filter: sepia(70%); }

.hue-rotate {
  -webkit-filter: hue-rotate(120deg);
          filter: hue-rotate(120deg); }

.backdrop-filter {
  -webkit-backdrop-filter: blur(10px);
          backdrop-filter: blur(10px); }

/*
  * Text (https://web.dev/learn/css/typography/)
  */
.vertical-text {
  -webkit-writing-mode: vertical-lr;
      -ms-writing-mode: tb-lr;
          writing-mode: vertical-lr; }

.text-orientation {
  text-orientation: upright; }

.text-shadow {
  text-shadow: 1px 1px 2px rgba(255,0,17,0.8), 1px -1px 2px rgba(255,0,204,0.8), -1px 1px 2px rgba(255,0,255,0.8), -1px -1px 2px rgba(255,0,255,0.8), 0 0 16px rgba(255,0,255,0.66667), 0 0 64px rgba(255,0,255,0.86667); }

.text-light {
  font-weight: 100; }

.text-bold {
  font-weight: 900; }

.text-normal {
  font-weight: 400; }

/*
  * Blend Modes (https://web.dev/learn/css/blend-modes/)
    You can use most of the blend modes available in a design tool with CSS, using the mix-blend-mode or the background-blend-mode properties. The mix-blend-mode applies blending to a whole element and the background-blend-mode applies blending to the background of an element.
  */
.duotone {
  max-width: 450px;
  position: relative;
  margin: 0 auto; }
  .duotone::before, .duotone::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1; }
  .duotone::after {
    background: hotpink;
    mix-blend-mode: multiply; }
  .duotone::before {
    background: navy;
    mix-blend-mode: lighten; }

/*
  * Other effects
  */
.background-effect {
  aspect-ratio: 1/1;
  border: 0.5px solid rgba(153, 153, 153, 0.5);
  padding: 1rem;
  font-family: 'Google Sans', 'Google Sans Text', Roboto, sans-serif;
  font-size: 10rem;
  font-weight: bold;
  text-align: center;
  background-image: url("https://images.unsplash.com/photo-1567095761054-7a02e69e5c43?auto=format&fit=crop&w=690&q=80");
  background-size: contain;
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent; }

footer {
  background-color: gold; }
  footer .wrapper {
    background: red;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    padding: 0.5rem; }
  footer p {
    color: aliceblue; }

.card {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 280px;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d; }
  .card:focus, .card[focus-within], .card:hover {
    -webkit-transform: rotateY(180deg);
            transform: rotateY(180deg); }
  .card:focus, .card:focus-within, .card:hover {
    -webkit-transform: rotateY(180deg);
            transform: rotateY(180deg); }

.face {
  --flow-space: 1rem;
  position: absolute;
  height: 100%;
  width: 100%;
  border: 1px solid cornflowerblue;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }

.back {
  display: grid;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  justify-items: center;
  place-items: center;
  background: cornflowerblue;
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg); }

input {
  min-width: 320px;
  padding: 0.5rem 1rem;
  line-height: 1;
  font: inherit;
  border: 1px solid var(--color-mid);
  border-radius: 0.25rem; }
  input:invalid {
    border-color: red; }
  input::-webkit-input-placeholder {
    color: darkcyan; }
  input::-moz-placeholder {
    color: darkcyan; }
  input:-ms-input-placeholder {
    color: darkcyan; }
  input::-ms-input-placeholder {
    color: darkcyan; }
  input::placeholder {
    color: darkcyan; }

.hero {
  background-image: url(../879e462bc3d24b346881.jpeg);
  background-position: center center;
  background-size: cover;
  height: 80vh;
  width: 100vw;
  position: relative;
  z-index: 0; }
  .hero::after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: #172121;
    opacity: 0.7;
    z-index: -1; }
    .hero::after h1 {
      display: block;
      background: red !important;
      color: aliceblue !important; }
    .hero::after span {
      color: green; }
    .hero::after .cta {
      display: inline-block; }

img:not([alt]) {
  outline: 10px red; }

a {
  color: gold; }
  a:link {
    text-decoration: none;
    color: gold; }
  a:hover {
    text-decoration: underline;
    text-underline-offset: 6px;
    color: aliceblue; }
  a:focus {
    outline: 2px solid gold;
    outline-offset: 6px; }
  a:not([class]) {
    color: blue; }

.helper {
  display: none; }

button {
  display: inline-block;
  padding: 0.5rem 2rem;
  min-width: 5rem;
  cursor: pointer;
  border: 1px solid black; }
  button:hover {
    color: #000000;
    background-color: #8c7ae6; }
  button:focus {
    -webkit-box-shadow: 0px 0px 0px 3px #192a56;
            box-shadow: 0px 0px 0px 3px #192a56;
    outline: 2px dashed slateblue;
    outline-offset: 6px;
    background-color: black; }
  button[focus-within] .helper {
    display: block; }
  button:focus-within .helper {
    display: block; }
  button.focus-visible {
    outline: 1px solid black; }
  button:focus-visible {
    outline: 1px solid black; }
  button:active {
    -webkit-transform: scale(0.99);
            transform: scale(0.99);
    -webkit-box-shadow: none;
            box-shadow: none; }
  button:disabled {
    background: grey;
    border-color: grey;
    cursor: not-allowed; }

#content:target {
  background: yellow; }

/*
  * Lists (https://web.dev/learn/css/lists/)
    There are three list-style properties you can use to style your example: list-style-position, list-style-image, and list-style-type.
      - list-style-position: inside/outside;
      - list-style-image: url(image.png); // linear-gradient(to left bottom, pink, teal); 
      - list-style-type: "🛒"; // "space-counter" / disc / circle / "\1F44D" -- thumbs up sign (https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type)
      * Shorthand: list-style: <'list-style-type'> || <'list-style-position'> || <'list-style-image'>
*/
::marker {
  color: hotpink;
  content: '~'; }

ul::marker, ol::marker {
  font-size: 1.5rem; }

.is-hidden {
  display: none !important; }

:empty {
  display: none; }

::-moz-selection {
  background-color: #172121;
  color: aliceblue; }

::selection {
  background-color: #172121;
  color: aliceblue; }

:checked {
  -webkit-box-shadow: 0px 0px 5px 2px green;
          box-shadow: 0px 0px 5px 2px green; }

:indeterminate {
  -webkit-box-shadow: 0px 0px 5px 2px orange;
          box-shadow: 0px 0px 5px 2px orange; }

:required {
  -webkit-box-shadow: 0px 0px 5px 2px red;
          box-shadow: 0px 0px 5px 2px red; }

:optional {
  -webkit-box-shadow: 0px 0px 5px 2px blue;
          box-shadow: 0px 0px 5px 2px blue; }

@media (prefers-reduced-motion: reduce){
  *, *::before, *::after {
    -webkit-animation-duration: 0.01ms !important;
            animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
            animation-iteration-count: 1 !important;
    -webkit-transition-duration: 0.01ms !important;
            transition-duration: 0.01ms !important;
    scroll-behavior: auto !important; } }


/*# sourceMappingURL=../sourcemaps/css/styles.min.css.map*/